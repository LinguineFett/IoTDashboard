[
    {
        "id": "700a4e0be0c758d2",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d4106059310d27b2",
        "type": "mqtt in",
        "z": "700a4e0be0c758d2",
        "name": "",
        "topic": "room/temperature",
        "qos": "2",
        "datatype": "auto",
        "broker": "8fd8ab9f071409b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 110,
        "y": 40,
        "wires": [
            [
                "9ac5bb10f345698d",
                "6f632507582cd485"
            ]
        ]
    },
    {
        "id": "9ac5bb10f345698d",
        "type": "ui_gauge",
        "z": "700a4e0be0c758d2",
        "name": "",
        "group": "10b6e36b.0ae36d",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "Celsius",
        "format": "{{value}}",
        "min": "-20",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 550,
        "y": 40,
        "wires": []
    },
    {
        "id": "800939b41861529b",
        "type": "mqtt in",
        "z": "700a4e0be0c758d2",
        "name": "",
        "topic": "room/humidity",
        "qos": "2",
        "datatype": "auto",
        "broker": "8fd8ab9f071409b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 110,
        "y": 240,
        "wires": [
            [
                "6f9703db316e46f8"
            ]
        ]
    },
    {
        "id": "6f9703db316e46f8",
        "type": "ui_gauge",
        "z": "700a4e0be0c758d2",
        "name": "",
        "group": "10b6e36b.0ae36d",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 260,
        "y": 240,
        "wires": []
    },
    {
        "id": "62cd808ab36eb051",
        "type": "mqtt in",
        "z": "700a4e0be0c758d2",
        "name": "",
        "topic": "room/photoresistor",
        "qos": "2",
        "datatype": "auto",
        "broker": "8fd8ab9f071409b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "af807881d84159eb"
            ]
        ]
    },
    {
        "id": "f0cf6acffda3cf37",
        "type": "mqtt out",
        "z": "700a4e0be0c758d2",
        "name": "",
        "topic": "room/photoresistorThreshold",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fd8ab9f071409b1",
        "x": 600,
        "y": 300,
        "wires": []
    },
    {
        "id": "c908edb9248a199f",
        "type": "ui_numeric",
        "z": "700a4e0be0c758d2",
        "name": "",
        "label": "Temperature Threshold",
        "tooltip": "",
        "group": "10b6e36b.0ae36d",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "tempThreshold",
        "topicType": "str",
        "format": "{{msg.payload}}",
        "min": "-20",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "c216f0b6603acdac"
            ]
        ]
    },
    {
        "id": "87adb5c94048e763",
        "type": "ui_numeric",
        "z": "700a4e0be0c758d2",
        "name": "",
        "label": "Light Threshold",
        "tooltip": "",
        "group": "35af72ed662af18e",
        "order": 0,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "lightThreshold",
        "topicType": "str",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "3000",
        "step": "50",
        "className": "",
        "x": 360,
        "y": 300,
        "wires": [
            [
                "f0cf6acffda3cf37"
            ]
        ]
    },
    {
        "id": "c24185694cdfe87e",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Compare Temp to Threshold",
        "func": "if(flow.get(\"temp\") > flow.get(\"tempThreshold\") && flow.get(\"canSendEmail\") == \"YES\") {\n    msg.payload = \"ON\";\n    flow.set(\"canSendEmail\", \"NO\");\n} else if (flow.get(\"temp\") <= flow.get(\"tempThreshold\")) {\n    msg.payload = \"OFF\";\n    flow.set(\"canSendEmail\", \"YES\");\n} else {\n    msg.payload = \"NOTHING\";\n    flow.set(\"canSendEmail\", \"NO\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nif(typeof flow.get(\"fanState\") == \"undefined\") {\n    flow.set(\"fanState\", \"FanState: OFF\");\n}",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 100,
        "wires": [
            [
                "fbc0cb820ebd2428"
            ]
        ]
    },
    {
        "id": "fbc0cb820ebd2428",
        "type": "switch",
        "z": "700a4e0be0c758d2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            },
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 930,
        "y": 100,
        "wires": [
            [
                "1ba69e3b8dc3acef"
            ],
            [
                "84d20609dbbd3b70"
            ],
            [
                "8673eb2af78ed58f"
            ],
            [
                "8673eb2af78ed58f"
            ]
        ]
    },
    {
        "id": "84d20609dbbd3b70",
        "type": "mqtt out",
        "z": "700a4e0be0c758d2",
        "name": "Turn Off Fan",
        "topic": "room/fan",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fd8ab9f071409b1",
        "x": 1090,
        "y": 80,
        "wires": []
    },
    {
        "id": "b6b933ee1f62f5d2",
        "type": "mqtt out",
        "z": "700a4e0be0c758d2",
        "name": "Fan",
        "topic": "room/fan",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fd8ab9f071409b1",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "19c99f029bf501a5",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Turn On/Off Fan",
        "func": "if(msg.payload.includes(\"YES\")) {\n    flow.set(\"fanState\", \"ON\");\n    msg.payload = \"ON\";\n} else {\n    flow.set(\"fanState\", \"OFF\");\n    msg.payload = \"OFF\";\n}\n\nflow.set(\"canSendEmail\", \"NO\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 180,
        "wires": [
            [
                "b6b933ee1f62f5d2"
            ]
        ]
    },
    {
        "id": "6f632507582cd485",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "",
        "func": "flow.set(\"temp\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 80,
        "wires": [
            [
                "c24185694cdfe87e"
            ]
        ]
    },
    {
        "id": "1ba69e3b8dc3acef",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Message",
        "func": "msg.payload = \"The temperature is \" + flow.get(\"temp\") + \". Would you like to turn on the fan?\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 40,
        "wires": [
            [
                "5d868672dbd84ba9"
            ]
        ]
    },
    {
        "id": "8673eb2af78ed58f",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Set FanState Off",
        "func": "flow.set(\"fanState\", \"OFF\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c216f0b6603acdac",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "",
        "func": "// if(msg.payload != \"undefined\") {\n//     msg.payload = flow.get(\"tempthreshold\");\n// }\nflow.set(\"tempThreshold\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 120,
        "wires": [
            [
                "c24185694cdfe87e"
            ]
        ]
    },
    {
        "id": "5d868672dbd84ba9",
        "type": "e-mail",
        "z": "700a4e0be0c758d2",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "apptestinz@gmail.com",
        "dname": "",
        "x": 1240,
        "y": 40,
        "wires": []
    },
    {
        "id": "c47bae76923fa2b2",
        "type": "e-mail in",
        "z": "700a4e0be0c758d2",
        "name": "",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "30",
        "fetch": "auto",
        "inputs": 0,
        "x": 90,
        "y": 180,
        "wires": [
            [
                "19c99f029bf501a5"
            ]
        ]
    },
    {
        "id": "81649a86cc139905",
        "type": "mqtt in",
        "z": "700a4e0be0c758d2",
        "name": "",
        "topic": "IoTlab/RFID",
        "qos": "2",
        "datatype": "auto",
        "broker": "8fd8ab9f071409b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 110,
        "y": 420,
        "wires": [
            [
                "8b115f392622c13b",
                "bfca78d4e0b1b6dd"
            ]
        ]
    },
    {
        "id": "8b115f392622c13b",
        "type": "ui_text",
        "z": "700a4e0be0c758d2",
        "group": "dd6a69fa5cd63ef0",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "RFID Tag Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 540,
        "y": 420,
        "wires": []
    },
    {
        "id": "d87e814ce08c9a81",
        "type": "mqtt in",
        "z": "700a4e0be0c758d2",
        "name": "",
        "topic": "user/temperature",
        "qos": "2",
        "datatype": "auto",
        "broker": "8fd8ab9f071409b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 100,
        "y": 120,
        "wires": [
            [
                "c908edb9248a199f"
            ]
        ]
    },
    {
        "id": "4d9f7b9890a15719",
        "type": "mqtt in",
        "z": "700a4e0be0c758d2",
        "name": "",
        "topic": "user/light",
        "qos": "2",
        "datatype": "auto",
        "broker": "8fd8ab9f071409b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 100,
        "y": 300,
        "wires": [
            [
                "87adb5c94048e763"
            ]
        ]
    },
    {
        "id": "af807881d84159eb",
        "type": "ui_gauge",
        "z": "700a4e0be0c758d2",
        "name": "",
        "group": "35af72ed662af18e",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "3000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 590,
        "y": 240,
        "wires": []
    },
    {
        "id": "6af13951819d41f6",
        "type": "mqtt in",
        "z": "700a4e0be0c758d2",
        "name": "",
        "topic": "room/led",
        "qos": "2",
        "datatype": "auto",
        "broker": "8fd8ab9f071409b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 100,
        "y": 360,
        "wires": [
            [
                "2697b8a97d6f6803"
            ]
        ]
    },
    {
        "id": "2697b8a97d6f6803",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "",
        "func": "if(msg.payload == \"ON\" && context.get(\"canSendEmail\") == \"YES\") {\n    msg.payload = \"SEND\";\n    context.set(\"canSendEmail\", \"NO\");\n} else if (msg.payload == \"OFF\"){\n    context.set(\"canSendEmail\", \"YES\");\n    msg.payload = \"DONTSEND\";\n} else {\n    msg.payload = \"DONTSEND\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 360,
        "wires": [
            [
                "402d984a96cd15a7"
            ]
        ]
    },
    {
        "id": "402d984a96cd15a7",
        "type": "switch",
        "z": "700a4e0be0c758d2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SEND",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 440,
        "y": 360,
        "wires": [
            [
                "36718497d98b1bdf"
            ]
        ]
    },
    {
        "id": "36718497d98b1bdf",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Message",
        "func": "msg.payload = \"The LED is ON\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 360,
        "wires": [
            [
                "f0b13e6ec6b04787"
            ]
        ]
    },
    {
        "id": "f0b13e6ec6b04787",
        "type": "e-mail",
        "z": "700a4e0be0c758d2",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "apptestinz@gmail.com",
        "dname": "",
        "x": 850,
        "y": 360,
        "wires": []
    },
    {
        "id": "6ebfd70a61875298",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Message",
        "func": "date = new Date();\ntime = date.toLocaleTimeString(\"en-US\", {\n    hour:\"2-digit\",\n    minute:\"2-digit\",\n    hour12:false\n})\n\nmsg.payload = \"At \" + time + \", this \" + msg.payload + \" is here.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 460,
        "wires": [
            [
                "8043067fe5fc5a8b"
            ]
        ]
    },
    {
        "id": "8043067fe5fc5a8b",
        "type": "e-mail",
        "z": "700a4e0be0c758d2",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "apptestinz@gmail.com",
        "dname": "",
        "x": 740,
        "y": 460,
        "wires": []
    },
    {
        "id": "173c4ee069db6da8",
        "type": "mqtt out",
        "z": "700a4e0be0c758d2",
        "name": "",
        "topic": "user/light",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fd8ab9f071409b1",
        "x": 1240,
        "y": 580,
        "wires": []
    },
    {
        "id": "d061455188288983",
        "type": "ui_numeric",
        "z": "700a4e0be0c758d2",
        "name": "",
        "label": "User Light Threshold",
        "tooltip": "",
        "group": "dd6a69fa5cd63ef0",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "userLightThreshold",
        "topicType": "str",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "3000",
        "step": "50",
        "className": "",
        "x": 780,
        "y": 580,
        "wires": [
            [
                "e0693578cebdaf3b"
            ]
        ]
    },
    {
        "id": "da744323980f35f2",
        "type": "ui_numeric",
        "z": "700a4e0be0c758d2",
        "name": "",
        "label": "User Temperature Threshold",
        "tooltip": "",
        "group": "dd6a69fa5cd63ef0",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "userTempThreshold",
        "topicType": "str",
        "format": "{{msg.payload}}",
        "min": "-20",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 800,
        "y": 520,
        "wires": [
            [
                "f54004804dd35cdc"
            ]
        ]
    },
    {
        "id": "bb7450f651f033c7",
        "type": "mqtt out",
        "z": "700a4e0be0c758d2",
        "name": "",
        "topic": "user/temperature",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fd8ab9f071409b1",
        "x": 1270,
        "y": 520,
        "wires": []
    },
    {
        "id": "bfca78d4e0b1b6dd",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Update Current User",
        "func": "if (msg.payload != \"\" && msg.payload != null && msg.payload != \"undefined\") {\n    flow.set(\"user\", msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 460,
        "wires": [
            [
                "6ebfd70a61875298",
                "de97fb227735c260",
                "d95af59ae571608e"
            ]
        ]
    },
    {
        "id": "f54004804dd35cdc",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Update User Temp",
        "func": "flow.set(\"userTemp\" + flow.get(\"user\"), msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 520,
        "wires": [
            [
                "bb7450f651f033c7"
            ]
        ]
    },
    {
        "id": "e0693578cebdaf3b",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Update User Light",
        "func": "flow.set(\"userLight\" + flow.get(\"user\"), msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 580,
        "wires": [
            [
                "173c4ee069db6da8"
            ]
        ]
    },
    {
        "id": "de97fb227735c260",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Set User Temp",
        "func": "if (flow.get(\"userTemp\" + flow.get(\"user\")) == null) {\n    flow.set(\"userTemp\" + flow.get(\"user\"), 30);\n}\nmsg.payload = flow.get(\"userTemp\" + flow.get(\"user\"));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 520,
        "wires": [
            [
                "da744323980f35f2"
            ]
        ]
    },
    {
        "id": "d95af59ae571608e",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Set User Light",
        "func": "if (flow.get(\"userLight\" + flow.get(\"user\")) == null) {\n    flow.set(\"userLight\" + flow.get(\"user\"), 500);\n}\nmsg.payload = flow.get(\"userLight\" + flow.get(\"user\"));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 580,
        "wires": [
            [
                "d061455188288983"
            ]
        ]
    },
    {
        "id": "4c7e9617cc608145",
        "type": "exec",
        "z": "700a4e0be0c758d2",
        "command": "/usr/bin/hcitool",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10",
        "winHide": false,
        "oldrc": false,
        "name": "bt presence",
        "x": 330,
        "y": 800,
        "wires": [
            [
                "a97c57ec47cd7eff"
            ],
            [],
            []
        ]
    },
    {
        "id": "a97c57ec47cd7eff",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "nonempty",
        "func": "msg.payload = msg.payload ? 1 : 0;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 800,
        "wires": [
            [
                "17d4a946aecc1ccd"
            ]
        ]
    },
    {
        "id": "0bc4630b25111fbf",
        "type": "inject",
        "z": "700a4e0be0c758d2",
        "name": "cellphone",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "rrsi 44:5C:E9:C7:47:91",
        "payloadType": "str",
        "x": 120,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "17d4a946aecc1ccd",
        "type": "debug",
        "z": "700a4e0be0c758d2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 660,
        "y": 800,
        "wires": []
    },
    {
        "id": "1e600251d689e482",
        "type": "exec",
        "z": "700a4e0be0c758d2",
        "command": "/usr/bin/hcitool",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "15",
        "winHide": false,
        "oldrc": false,
        "name": "Scan for Devices",
        "x": 290,
        "y": 660,
        "wires": [
            [
                "c63f4508389c4e1a",
                "2b7b9ab058f03419"
            ],
            [],
            []
        ]
    },
    {
        "id": "9f23ab2a2e836353",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Send Command per Device",
        "func": "devices = msg.payload;\ncommands = [];\nif(typeof devices.length === 'number' && devices[0] !== \"\") {\n    for (i = 0; i < devices.length; i++) {\n        commands[i] = \"rrsi\" + devices[i];\n        // msg.payload = \"rrsi\" + devices[i];\n        // node.send(msg);\n    }\n}\nmsg.payload = commands;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 660,
        "wires": [
            [
                "95c404cc2f7a806d"
            ]
        ]
    },
    {
        "id": "50a52761deef3d87",
        "type": "ui_text",
        "z": "700a4e0be0c758d2",
        "group": "46f52f55e1df7a3a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Number of Devices",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1730,
        "y": 660,
        "wires": []
    },
    {
        "id": "c63f4508389c4e1a",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Convert Devices to Array",
        "func": "devices = msg.payload.substring(15).split(\"\\t\");\nmsg.payload = devices.filter(function(value, index, arr) {\n    return !value;\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 660,
        "wires": [
            [
                "9f23ab2a2e836353"
            ]
        ]
    },
    {
        "id": "3ea02c80ffbaff4c",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "Count Devices",
        "func": "devices = msg.payload;\n\ndevices = devices.filter(function(value, index, arr) {\n    rrsi = parseInt(value.substring(19));\n    return !value || rrsi <= flow.get(\"rrsiThreshold\");\n});\n\nif (typeof devices.length === 'number' && devices[0]) {\n    msg.payload = devices.length;\n} else {\n    msg.payload = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nif (flow.get(\"rrsiThreshold\") == null) {\n    flow.set(\"rrsiThreshold\", 0);\n}",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 660,
        "wires": [
            [
                "50a52761deef3d87"
            ]
        ]
    },
    {
        "id": "6500b10bc6fc91b7",
        "type": "ui_button",
        "z": "700a4e0be0c758d2",
        "name": "Start Scanning",
        "group": "46f52f55e1df7a3a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Scan fot Devices",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "scan",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 660,
        "wires": [
            [
                "1e600251d689e482"
            ]
        ]
    },
    {
        "id": "2b7b9ab058f03419",
        "type": "trigger",
        "z": "700a4e0be0c758d2",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 510,
        "y": 720,
        "wires": [
            [
                "6500b10bc6fc91b7"
            ]
        ]
    },
    {
        "id": "95c404cc2f7a806d",
        "type": "split",
        "z": "700a4e0be0c758d2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1040,
        "y": 660,
        "wires": [
            [
                "7ce45d7fb69c5796"
            ]
        ]
    },
    {
        "id": "f50fe8451f7dca8f",
        "type": "join",
        "z": "700a4e0be0c758d2",
        "name": "",
        "mode": "auto",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topi",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1350,
        "y": 660,
        "wires": [
            [
                "3ea02c80ffbaff4c"
            ]
        ]
    },
    {
        "id": "7ce45d7fb69c5796",
        "type": "exec",
        "z": "700a4e0be0c758d2",
        "command": "/usr/bin/hcitool",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10",
        "winHide": false,
        "oldrc": false,
        "name": "bt presence",
        "x": 1190,
        "y": 660,
        "wires": [
            [
                "f50fe8451f7dca8f"
            ],
            [],
            []
        ]
    },
    {
        "id": "f34d09c7005362cc",
        "type": "ui_numeric",
        "z": "700a4e0be0c758d2",
        "name": "",
        "label": "RSSI Threshold",
        "tooltip": "",
        "group": "46f52f55e1df7a3a",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "2",
        "className": "",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "83a2704bfa2fe4a8"
            ]
        ]
    },
    {
        "id": "83a2704bfa2fe4a8",
        "type": "function",
        "z": "700a4e0be0c758d2",
        "name": "",
        "func": "flow.set(\"rrsiThreshold\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "8fd8ab9f071409b1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.210.68",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "10b6e36b.0ae36d",
        "type": "ui_group",
        "name": "Temperature and Humidity",
        "tab": "d6ae9f25.efcf1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "35af72ed662af18e",
        "type": "ui_group",
        "name": "Photoresistor",
        "tab": "d6ae9f25.efcf1",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dd6a69fa5cd63ef0",
        "type": "ui_group",
        "name": "User Thresholds",
        "tab": "d6ae9f25.efcf1",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "46f52f55e1df7a3a",
        "type": "ui_group",
        "name": "Bluetooth",
        "tab": "d6ae9f25.efcf1",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d6ae9f25.efcf1",
        "type": "ui_tab",
        "name": "Project",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]